<template>
  <k-toolbar-item icon="compass" tooltip="Napp Pathfinder">
    <k-accordion>
      <k-accordion-item title="Best Path">
        <k-dropdown icon="circle-o" title="Source:" :options="get_interfaces"
          :value.sync="source"></k-dropdown>
        <k-dropdown icon="circle-o" title="Destination:" :options="get_interfaces"
          :value.sync ="destination"></k-dropdown>
       <k-select icon="link" title="Desired links:" :options="get_links"
        :value.sync ="desired_links"></k-select>
       <k-select icon="link" title="Undesired links:" :options="get_links"
        :value.sync ="undesired_links"></k-select>
        <k-button icon="search" title="Search" :on_click="get_paths">
        </k-button>

      </k-accordion-item>
      <k-accordion-item title="Best Constrained Path">
        <k-dropdown icon="circle-o" title="Source:" :options="get_interfaces"
          :value.sync="source"></k-dropdown>
        <k-dropdown icon="circle-o" title="Destination:" :options="get_interfaces"
          :value.sync ="destination"></k-dropdown>

        <k-checkbox icon="circle-o" title="Bandwidth:"
        :model.sync = "checkedList" :value = "'bandwidth'"></k-checkbox>

        <k-slider icon="circle-o"
        :action="function (val) {metrics.bandwidth = parseInt(val)}"></k-slider>

        <k-checkbox icon="circle-o" title="Reliability:"
        :model.sync = "checkedList" :value = "'reliability'"></k-checkbox>

        <k-slider icon="circle-o"
        :action="function (val) {metrics.reliability = parseInt(val)}"></k-slider>

        <k-checkbox icon="circle-o" title="Delay:"
        :model.sync = "checkedList" :value = "'delay'"></k-checkbox>

        <k-slider icon="circle-o"
        :action="function (val) {metrics.delay = parseInt(val)}"></k-slider>

        <k-checkbox icon="circle-o" title="Utilization:"
        :model.sync = "checkedList" :value = "'utilization'"></k-checkbox>

        <k-slider icon="circle-o"
        :action="function (val) {metrics.utilization = parseInt(val)}"></k-slider>

        <k-checkbox icon="circle-o" title="Priority:"
        :model.sync = "checkedList" :value = "'priority'"></k-checkbox>

        <k-slider icon="circle-o"
        :action="function (val) {metrics.priority = parseInt(val)}"></k-slider>

        <k-checkbox icon="circle-o" title="Ownership:"
        :model.sync = "checkedList" :value = "'ownership'"></k-checkbox>

        <k-input icon="circle-o"
        :value.sync="metrics.ownership"></k-input>

        <k-slider icon="circle-o" :max = 6
        :action="function (val) {flexible = parseInt(val)}"></k-slider>

        <k-button icon="search" title="Search" :on_click="get_constrained_paths">
        </k-button>

      </k-accordion-item>

    <k-accordion>
  </k-toolbar-item>
</template>

<script>
module.exports = {
  methods: {
    get_paths (){
      var self = this
      $.ajax({
        async: true,
        dataType: "json",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify({"source": self.source,
               "destination": self.destination,
               "desired_links": self.desired_links,
               "undesired_links": self.undesired_links
               }),

        url: this.$kytos_server_api + "kytos/pathfinder/v2",
        success: function(data) {
            if (data['paths'][0] !== undefined){
                self.paths = data['paths'][0].hops;
            } else {
                self.paths = []
            }
          self.show();
        }
      });

    },
    get_constrained_paths (){
      var self = this
      var metrics = {}
      var checked
      for(checked of self.checkedList)
      {
        metrics[checked] = self.metrics[checked]
      }

      $.ajax({
        async: true,
        dataType: "json",
        type: "POST",
        contentType: "application/json",
        data: JSON.stringify({"source": self.source,
               "destination": self.destination,
               "metrics": metrics,
               "flexible": self.flexible
               }),

        url: this.$kytos_server_api + "kytos/pathfinder/v3",
        success: function(data) {
            if (data[0] !== undefined){
                self.paths = data[0]['paths'][0];
            } else {
                self.paths = []
            }
          self.show();
        }
      });

    },
    get_topology(){
      var self = this
      $.ajax({
        async: true,
        dataType: "json",
        url: this.$kytos_server_api + "kytos/topology/v3",

        success: function(data) {
          self.switches = data['topology']['switches']
          self.links = data['topology']['links']
        }
      });

    },
    show() {
       var content = {
                      "component": 'kytos-pathfinder-k-info-panel-best_path',
                      "content": this.paths,
                      "icon": "compass",
                      "title": "Best Path",
                      "subtitle": "by kytos/pathfinder"
                     }
       this.$kytos.$emit("showInfoPanel", content)

   }
  },

  computed: {
    get_interfaces(){
      var interfaces = []
      $.each(this.switches, function(key, value){
        $.each(value.interfaces, function(key, value){
          interfaces.push({value: key, description: key})
        });
      });

      return interfaces;
    },
    get_links(){
      var links = []
      $.each(this.links, function(key, value){
        links.push({value:value.id, description:value.id});
      });

      return links;
    }
  },

  created(){
    this.get_topology();
  },

  data: function(){
    return {
      paths: [],
      switches: [],
      links: [],
      source: "",
      destination: "",
      desired_links: [],
      undesired_links: [],
      checkedList: [],
      metrics:{
        bandwidth: 1,
        reliability: 2,
        delay: 3,
        utilization: 4,
        priority: 5,
        ownership: "yo"
      },
      flexible: 6
    }
  }
}
</script>
